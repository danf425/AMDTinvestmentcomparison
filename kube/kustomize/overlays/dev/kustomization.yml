bases:
  - ../../base/
kind: Kustomization

metadata:
  name: kustomization

images:
  - name: app-image
    newName: <+artifact.image>

namespace: <+infra.namespace>

configMapGenerator:
  - name: aws-ic-runtime
    literals:
      - SPRING_PROFILES_ACTIVE=aws-dev, fake-auth, cloud
      - APP_FLAGS=-Dsun.net.http.allowRestrictedHeaders=true  -Djdk.tls.allowUnsafeServerCertChange=true -Dsun.security.ssl.allowUnsafeRenegotiation=true -Dserver.servlet.context-path=<+pipeline.stages.DeployDEV.variables.context_path>

kind: Ingress
metadata:
  name: <+pipeline.stages.DeployDEV.variables.app_label>
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: <+pipeline.stages.DeployDEV.variables.cluster_host_apache>
      http:
        paths:
          - path: <+pipeline.stages.DeployDEV.variables.context_path>
            pathType: "Prefix"
            backend:
              service:
                name: <+pipeline.stages.DeployDEV.variables.app_label>
                port:
                  number: 80
    - host: <+pipeline.stages.DeployDEV.variables.cluster_host_global>
      http:
        paths:
          - path: <+pipeline.stages.DeployDEV.variables.context_path>
            pathType: "Prefix"
            backend:
              service:
                name: <+pipeline.stages.DeployDEV.variables.app_label>
                port:
                  number: 80
    - host: <+pipeline.stages.DeployDEV.variables.cluster_host_blue_green>
      http:
        paths:
          - path: <+pipeline.stages.DeployDEV.variables.context_path>
            pathType: "Prefix"
            backend:
              service:
                name: <+pipeline.stages.DeployDEV.variables.app_label>
                port:
                  number: 80
  tls:
    - hosts:
        - <+pipeline.stages.DeployDEV.variables.cluster_host_global>
        - <+pipeline.stages.DeployDEV.variables.cluster_host_blue_green>
